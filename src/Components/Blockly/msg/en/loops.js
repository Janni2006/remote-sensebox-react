export const LOOPS = {

    CONTROLS_FLOW_STATEMENTS_HELPURL: "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
    CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK: "break out of loop",
    CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE: "continue with next iteration of loop",
    CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK: "Break out of the containing loop.",
    CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE: "Skip the rest of this loop, and continue with the next iteration.",
    CONTROLS_FLOW_STATEMENTS_WARNING: "Warning: This block may only be used within a loop.",
    CONTROLS_FOREACH_HELPURL: "https://github.com/google/blockly/wiki/Loops#for-each",
    CONTROLS_FOREACH_TITLE: "for each item %1 in list %2",
    CONTROLS_FOREACH_TOOLTIP: "For each item in a list, set the variable '%1' to the item, and then do some statements.",
    CONTROLS_FOR_HELPURL: "https://github.com/google/blockly/wiki/Loops#count-with",
    CONTROLS_FOR_TITLE: "count with %1 from %2 to %3 by %4",
    CONTROLS_FOR_TOOLTIP: "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
    CONTROLS_REPEAT_HELPURL: "https://en.wikipedia.org/wiki/For_loop",
    CONTROLS_REPEAT_INPUT_DO: "do",
    CONTROLS_REPEAT_TITLE: "repeat %1 times",
    CONTROLS_REPEAT_TOOLTIP: "Do some statements several times.",
    CONTROLS_WHILEUNTIL_HELPURL: "https://github.com/google/blockly/wiki/Loops#repeat",
    CONTROLS_WHILEUNTIL_OPERATOR_UNTIL: "repeat until",
    CONTROLS_WHILEUNTIL_OPERATOR_WHILE: "repeat while",
    CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL: "While a value is false, then do some statements.",
    CONTROLS_WHILEUNTIL_TOOLTIP_WHILE: "While a value is true, then do some statements.",
}